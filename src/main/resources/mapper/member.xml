<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bitcamp.mapper.MemberMapper">
	<select id="emailcheck" parameterType="String" resultType="int">
		select count(*) 
		from member 
		where email = #{email}
	</select>
	
	<insert id="memberAdd" parameterType="com.bitcamp.dto.MemberDTO">
		<if test='birth != "404" and phone != "404"'>
			insert into member(email, name, password, phone, birth)
			values(#{email}, #{name}, #{password}, #{phone}, #{birth})
		</if>
		<if test='birth == "404" and phone == "404"'>
			insert into member(email, name, password)
			values(#{email}, #{name}, #{password})
		</if>
		<if test='birth == "404" and phone != "404"'>
			insert into member(email, name, password, phone)
			values(#{email}, #{name}, #{password}, #{phone	})
		</if>
		<if test='birth != "404" and phone == "404"'>
			insert into member(email, name, password, birth)
			values(#{email}, #{name}, #{password}, #{birth})
		</if>
	</insert>
	
	<select id="address" parameterType="int" resultType="com.bitcamp.dto.AddressDTO">
		select * from address where no = #{no} and default_addr = 1
	</select>
	
	<update id="addrssupdate1" parameterType="com.bitcamp.dto.AddressDTO">
		update address
		set default_addr = 0
		where no = #{no} 
		and alias != #{alias} 
		and addrDetail != #{addrDetail}
		and roadaddrPart1 != '${roadaddrPart1}' 
	</update>
	<update id="addrssupdate2" parameterType="com.bitcamp.dto.AddressDTO">
		update address
		set default_addr = 1
		where no = #{no} 
		and alias = #{alias} 
		and addrDetail = #{addrDetail}
		and roadaddrPart1 = '${roadaddrPart1}' 
	</update>
	<insert id="supportinsert" parameterType="com.bitcamp.dto.SupportDTO">
		insert into support(no, option_no) values(#{no}, #{option_no})
	</insert>
	
	<insert id="addressInsert" parameterType="com.bitcamp.dto.AddressDTO">
		insert into address(no, address_name, address_photo, alias, zipno, roadaddrPart1, roadaddrPart2, jibunaddr, addrDetail, default_addr) 
		values(#{no}, #{address_name}, #{address_photo}, #{alias}, #{zipno}, #{roadaddrPart1}, #{roadaddrPart2}, #{jibunaddr}, #{addrDetail}, 0)
	</insert>
	
	<select id="addrlist" parameterType="int" resultType="com.bitcamp.dto.AddressDTO">
		select * from address where no = #{no}
	</select>
	
	<select id="memberinfo" parameterType="String" resultType="com.bitcamp.dto.MemberDTO">
		select * from member where email = #{email}
	</select>
	
	<select id="projectinfo" parameterType="int" resultType="com.bitcamp.dto.ProjectDTO">
		select p.*	from `option` o join project p
		on o.project_no = p.project_no
		where option_no = #{option_no}
	</select>
	
	<resultMap type="hashMap" id="talk">
		<result column="talk_title" property="talk_title" />
		<result column="name" property="name" />
		<result column="email" property="email" />
		<result column="talk_date" property="talk_date" />
		<result column="talk_status" property="talk_status" />
	</resultMap>
	
	<!-- 받은 쪽지 리스트 -->
	<select id="recipientlist" parameterType="int" resultMap="talk">
		select talk_no, talk_title, name, email, date_format(talk_date, "%m-%d") talk_date , talk_status, talk_keep
		from member m join 
			(select talk_title, talk_date, t.no, talk_status, talk_no, talk_keep
			from talk t join member m
			on t.no = m.no
			where recipient = #{no} and talk_keep = 0) t
		where m.no = t.no
		order by talk_date desc
	</select>
	
	<!-- 읽지 않은 쪽지 갯수 -->
	<select id="unread" parameterType="int" resultType="int">
		select count(*) from talk t join member m
		on t.no = m.no
		where recipient = #{no}
		and talk_status is null
	</select>
	
	<!-- 쪽지 보관하기 -->
	<update id="keep" parameterType="java.util.HashMap">
		update talk set talk_keep = 1
		where talk_no in(#{talk_no})
	</update>
	
	
	<resultMap type="com.bitcamp.dto.MemberDTO" id="memberMap">
		<result property="no" column="no" />
		<result property="email" column="email" />
		<result property="password" column="password" />
		<result property="enabled" column="enabled" />
		<collection property="authList" resultMap="authMap" />
	</resultMap>

	<resultMap type="com.bitcamp.dto.AuthorityDTO" id="authMap">
		<result property="no" column="no" />
		<result property="auth" column="auth" />
	</resultMap>
	
	<select id="maxno" resultType="int">
		select max(no)+1 from member
	</select>
	
	<insert id="grantedAuth" parameterType="com.bitcamp.dto.MemberDTO">
<!-- 		insert into authority (no, auth) values 
		<foreach collection="authList" item="item" open="(" separator="," close=")">
			#{item.no}, #{item.auth}
		</foreach> -->
		
		insert into authority values (#{no}, 'ROLE_MEMBER')
		
	</insert>

	<select id="getUserById" parameterType="String"
		resultMap="memberMap">
		select member.no, email, password, enabled, auth
		from member join
		authority on member.no = authority.no
		where email = (select email from member where email = #{email})
	</select>
	
	<update id="changeAuth" parameterType="String">
		update authority join member on authority.no = member.no set auth = 'ROLE_MANAGER'
		where email = #{email}
	</update>

</mapper>
