<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bitcamp.mapper.ProjectMapper">


	<!-- list resultmap -->
	<resultMap type="hashMap" id="listdto">
		<result column="alias" property="alias" />
		<result column="project_no" property="project_no" />
		<result column="project_title" property="project_title" />
		<result column="category_no" property="category_no" />
		<result column="project_photo" property="project_photo" />
		<result column="project_status" property="project_status"/>
	</resultMap>

	<!-- detail option resultmap -->
	<resultMap type="hashMap" id="optdto">
		<result column="option_no" property="option_no" />
		<result column="option_name" property="option_name" />
		<result column="option_price" property="option_price" />
		<result column="option_contents" property="option_contents" />
		<result column="option_quantity" property="option_quantity" />
		<result column="project_no" property="project_no" />
	</resultMap>
	
	<!-- reply resultmap -->
	<resultMap type="hashMap" id="replydto">
	<result column="reply_contents" property="reply_contents"/>
	<result column="rating" property="rating"/>
	<result column="reply_no" property="reply_no"/>
	<result column="name" property="name"/>
	<result column="photo" property="photo"/>
	</resultMap>
	

	<!-- 검색 결과 리스트 total -->
	<select id="totalCount" resultType="int"
		parameterType="java.util.HashMap">
		select count(*)
		from project		
		<where>
			and project_status = 1 
			<if test="searchtxt !=null and searchtxt !='' ">
				and project_title like
				CONCAT('%',#{searchtxt},'%') 
				or alias like
				CONCAT('%',#{searchtxt},'%')				
			</if>
		</where>
	</select>

	<!-- 카테고리 선택 결과 리스트 total -->
	<select id="categorytotalCount" resultType="int"
		parameterType="String">
		select count(*)
		from project join category
		on
		project.category_no = category.category_no
		where project_status = 1 and sub_category = #{sub_category}
	</select>

	<select id="projectList" resultMap="listdto"
		parameterType="java.util.HashMap">
		select alias, project_no,project_title,
		category_no,project_views, project_photo
		from
		project		
		<where>
			and project_status = 1 
			<if test="searchtxt !=null and searchtxt !='' ">
				and project_title like
				CONCAT('%',#{searchtxt},'%') 
				or alias like
				CONCAT('%',#{searchtxt},'%')			
			</if>
		</where>
		order by startdate desc
		limit #{startRow},9
	</select>

	<!-- 카테고리 선택 결과 list -->
	<select id="projectcategoryList"
		parameterType="java.util.HashMap" resultMap="listdto">
		select alias,
		project_no, project_title,
		category.category_no,
		project_views, project_photo
		from project join category
		on
		project.category_no = category.category_no		
		where project_status = 1 and category.sub_category=#{sub_category}
		order by startdate desc
		limit #{startRow},9
	</select>

	<select id="projectsearchno" parameterType="int"
		resultType="int">
		select max(project_no)+1
		from category c join project p
		on
		c.category_no = p.category_no
		where main_category = (select
		main_category from category where category_no
		= #{category_no})
	</select>

	<insert id="projectInsert"
		parameterType="com.bitcamp.dto.ProjectDTO">
		insert into project (project_no, project_title,
		project_photo, targetprice, alias, img, introduce,
		startdate, enddate,
		project_contents, project_contract, no, category_no,project_status)
		values(
		#{project_no},
		#{project_title}, #{project_photo}, #{targetprice},
		#{alias}, #{img},
		#{introduce}, #{startdate}, #{enddate},'내용.pdf',
		#{project_contract}, #{no}, #{category_no},0)
	</insert>

	<!-- 프로젝트 디테일 -->
	<select id="projectDetail" parameterType="int" resultType="com.bitcamp.dto.ProjectDTO">
		select * from project
		where project_no= #{project_no}		
	</select>

	<!-- 프로젝트 디테일 창에서 보여주는 옵션 list -->
	<select id="projectoptionList" parameterType="int"
		resultMap="optdto">
		select * from `option` where project_no= #{project_no}
	</select>

	<!-- 프로젝트 등록 form에서 (5)옵션탭 -->
	<insert id="projectoptionInsert"
		parameterType="java.util.HashMap">
		insert into `option`
		(project_no,option_name,option_price,option_contents,option_quantity)
		values
		<foreach collection="list" item="item" separator=",">
			(#{item.project_no} ,#{item.option_name}, #{item.option_price}
			,#{item.option_contents} ,#{item.option_quantity})
		</foreach>
	</insert>


	<!-- 서명 -->
	<update id="sign" parameterType="java.util.HashMap">
		update member set sign =#{sign}
		where no = #{no}
	</update>


	<!-- 조회수 -->
	<update id="viewcnt" parameterType="int">
		update project set
		project_views = project_views+1 where project_no=
		#{project_no}
	</update>	

	<!-- 댓글 목록 -->
	<select id="replyList" parameterType="int" resultMap="replydto">
	select reply_no, member.name, member.photo, reply_contents, rating
	from reply join member
	on reply.no = member.no
	where project_no=#{proejct_no} order by reply_no desc
	</select>	
	
	<!-- 댓글 등록 -->
	<insert id="replyInsert"
		parameterType="com.bitcamp.dto.ReplyDTO">
		insert into reply (reply_contents,rating,no,project_no)
		values
		(#{reply_contents},4.5,#{no},#{project_no})
	</insert>
	
	
	<!-- 댓글 수정 -->
	<update id="replyUpdate" parameterType="com.bitcamp.dto.ReplyDTO">
	update reply set reply_contents = #{reply_contents} where reply_no = #{reply_no}
	</update>
	
	<!-- 댓글 삭제 -->
	<delete id="replyDelete" parameterType="int">
	 delete from reply where reply_no = #{reply_no}
	</delete>
	
	
	
	<!-- 병훈쓰가 뿌려주는 메인 캐러셀 -->
	
	<!-- 썸네일 이미지, 프로젝트 이름, 작성자, 남은 시간, 모인 금액, 달성률 -->
	<resultMap type="hashmap" id="mcdto">
		<result column="project_photo" property="project_photo" />
		<result column="project_title" property="project_title" />
		<result column="name" property="name" />
		<result column="enddate" property="nam" />
		<result column="option_price" property="sumop" />
		<result column="targetprice" property="ntargetprice" />
		<result column="project_views" property="project_views" />
		<result column="startdate" property="startdate" />
	</resultMap>
	
	<!-- 인기 프로젝트 -->
	<select id="popularProject" resultMap="mcdto">
		select project_photo, project_title, name,
			   to_days(enddate) - to_days(now()) + 1 as nam,
			   ifnull(sumop, 0) as sumop,
			   ifnull(ntargetprice, 0) as ntargetprice

		from project left join (
			select project.project_no, sum(option_price) as sumop, 
			round(ifnull(sum(option_price), 0) / targetprice * 100, 2) as ntargetprice
    		from `option` join support on `option`.option_no = support.option_no
    		join project on project.project_no = `option`.project_no
    		group by project.project_no) as so
    		
		on project.project_no = so.project_no
		join member on project.no = member.no
		where to_days(enddate) - to_days(now()) > 0
		order by project_views desc
	</select>
	
	<!-- 새로운 프로젝트 -->
	<select id="newProject" resultMap="mcdto">
		select project_photo, project_title, name,
			   to_days(enddate) - to_days(now()) + 1 as nam,
			   ifnull(sumop, 0) as sumop,
			   ifnull(ntargetprice, 0) as ntargetprice

		from project left join (
			select project.project_no, sum(option_price) as sumop, 
			round(ifnull(sum(option_price), 0) / targetprice * 100, 2) as ntargetprice
    		from `option` join support on `option`.option_no = support.option_no
    		join project on project.project_no = `option`.project_no
    		group by project.project_no) as so
    		
		on project.project_no = so.project_no
		join member on project.no = member.no
		where to_days(now()) - to_days(startdate) <![CDATA[ < ]]> 7 and to_days(enddate) - to_days(now()) > 0
		order by startdate desc
	</select>
	
	<!-- 성공 임박 프로젝트 -->
	<select id="successApproach" resultMap="mcdto">
				select project_photo, project_title, name,
			   to_days(enddate) - to_days(now()) + 1 as nam,
			   ifnull(sumop, 0) as sumop,
			   ifnull(ntargetprice, 0) as ntargetprice

		from project left join (
			select project.project_no, sum(option_price) as sumop, 
			round(ifnull(sum(option_price), 0) / targetprice * 100, 2) as ntargetprice
    		from `option` join support on `option`.option_no = support.option_no
    		join project on project.project_no = `option`.project_no
    		group by project.project_no) as so
    		
		on project.project_no = so.project_no
		join member on project.no = member.no
		where to_days(enddate) - to_days(now()) > 0 and round(ifnull(ntargetprice, 0), 2) > 95
		group by project.project_no
	</select>
	
</mapper>